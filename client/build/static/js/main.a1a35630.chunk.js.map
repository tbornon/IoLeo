{"version":3,"sources":["serviceWorker.js","Components/Navbar.jsx","Components/Buttons.jsx","Components/SnackbarProvider.jsx","Pages/CreateRoom.jsx","Pages/JoinRoom.jsx","Components/NewVarDialog.jsx","Components/NewGraphDialog.jsx","Components/SpeedDial.jsx","Components/Chart.jsx","Pages/Room.jsx","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","zIndex","drawer","CreateButton","color","background","props","react_default","a","createElement","Button","Object","assign","style","backgroundColor","Danger","Success","DangerSimple","SuccessSimple","useStyles1","success","green","error","palette","dark","info","primary","main","warning","amber","message","display","alignItems","MySnackbarContentWrapper","classes","className","onClose","variant","other","objectWithoutProperties","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","onClick","Close_default","icon","SnackbarContext","createContext","showMessage","open","SnackbarProvider","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","duration","indexOf","setState","handleClose","bind","assertThisInitialized","event","reason","Provider","value","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","children","React","Component","withSnackbar","Consumer","snackbar","contextType","padding","marginTop","container","flexWrap","textField","marginLeft","dense","menu","width","leftIcon","margin","content","_React$useState","useState","students","firstName","lastName","_React$useState2","slicedToArray","values","setValues","_React$useState3","redirect","roomID","_React$useState4","redirection","setRedirection","handleChange","name","i","e","toConsumableArray","target","deleteStudent","length","splice","react_router","to","Grid","justify","item","xs","md","lg","Paper","Typography","component","map","student","TextField","label","onChange","fullWidth","validEntries","data","objectSpread","fetch","api","protocol","port","method","headers","Accept","Content-Type","body","JSON","stringify","then","res","ok","json","_id","catch","console","concat","PersonAdd_default","_React$createElement","unit","variable","setVariable","setOpen","defineProperty","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","type","DialogActions","setRoom","err","msg","formControl","minWidth","selectEmpty","FormControl","InputLabel","htmlFor","Select","oldValues","inputProps","variables","MenuItem","SpeedDials","direction","actions","Add_default","newVar","newGraph","handleClick","handleOpen","_this$state","hidden","SpeedDial","ariaLabel","speedDial","SpeedDialIcon","onBlur","onFocus","onMouseEnter","onMouseLeave","SpeedDialAction","tooltipTitle","tooltipPlacement","tooltipOpen","withStyles","controls","exampleWrapper","position","height","radioGroup","bottom","right","Chart","_useState","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","y","x","Date","date","_useState2","setData","useEffect","log","newData","es","options","text","scales","xAxes","time","tooltipFormat","scaleLabel","labelString","distribution","yAxes","ticks","callback","index","legend","tooltips","callbacks","tooltipItem","yLabel","ref","flexShrink","drawerPaper","paddingTop","paddingLeft","paddingRight","toolbar","mixins","setNewVar","setNewGraph","_React$useState5","_React$useState6","setRedirect","_React$useState7","datas","now","graphs","_React$useState8","room","_React$useState9","_React$useState10","setNewData","params","socket","socketIOClient","emit","on","disconnect","Components_NewVarDialog","Components_NewGraphDialog","Components_SpeedDial","Drawer","paper","List","ListItem","ListItemText","Divider","toUpperCase","toLocaleString","graph","filter","ReactDOM","render","Components_SnackbarProvider","react_router_dom","CssBaseline","AppBar","Toolbar","Link","button","path","exact","CreateRoom","onKeyPress","history","push","autoFocus","Room","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1a35630.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n    })\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Plateforme ArduinoMKR\r\n                    </Typography>\r\n\r\n                    <Button component={Link} to=\"/\" color=\"inherit\" className={classes.button}>\r\n                        Accueil\r\n                    </Button>\r\n                    <Button component={Link} to=\"/create\" color=\"inherit\">\r\n                        Créer une salle\r\n                    </Button>\r\n                    <Button component={Link} to=\"/join\" color=\"inherit\" >\r\n                        Rejoindre une salle\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst CreateButton = (color, background) => {\r\n    if (background)\r\n        return props => <Button {...props} style={{ backgroundColor: color }}></Button>\r\n    else\r\n        return props => <Button {...props} style={{ color: color }}></Button>\r\n}\r\n\r\nexport const Danger = CreateButton(\"#f44336\", true)\r\nexport const Success = CreateButton(\"#4caf50\", true)\r\nexport const Warning = CreateButton(\"#ff9800\", true)\r\n\r\nexport const DangerSimple = CreateButton(\"#f44336\", false)\r\nexport const SuccessSimple = CreateButton(\"#4caf50\", false)\r\nexport const WarningSimple = CreateButton(\"#ff9800\", false)","import React, { createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport const SnackbarContext = createContext({\r\n    showMessage: {},\r\n    open: false\r\n});\r\n\r\nclass SnackbarProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            open: false,\r\n            showMessage: (variant, message, duration) => {\r\n                if ([\"success\", \"warning\", \"error\", \"info\"].indexOf(variant) !== -1 && message) {\r\n                    this.setState({\r\n                        variant,\r\n                        message,\r\n                        duration: duration || this.state.duration,\r\n                        open: true\r\n                    });\r\n                }\r\n            },\r\n            duration: 3000,\r\n            message: \"\",\r\n            variant: \"success\"\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SnackbarContext.Provider value={this.state}>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={this.state.open}\r\n                        autoHideDuration={this.state.duration}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MySnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.variant}\r\n                            message={this.state.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {this.props.children}\r\n                </SnackbarContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSnackbarProvider.contextType = SnackbarContext;\r\n\r\nexport function withSnackbar(Component) {\r\n    return function WrapperComponent(props) {\r\n        return (\r\n            <SnackbarContext.Consumer>\r\n                {snackbar => <Component {...props} snackbar={snackbar} />}\r\n            </SnackbarContext.Consumer>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SnackbarProvider;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\n\r\nimport { Danger, Success } from \"../Components/Buttons\"\r\nimport { withSnackbar } from \"../Components/SnackbarProvider\"\r\n\r\nimport { api } from \"../config\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: \"15px\"\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    dense: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    leftIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nfunction CreateRoom(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        students: [{ firstName: \"\", lastName: \"\" }]\r\n    });\r\n\r\n    const [redirection, setRedirection] = React.useState({\r\n        redirect: false,\r\n        roomID: 0\r\n    });\r\n\r\n    const handleChange = (name, i) => e => {\r\n        let students = [...values.students];\r\n        students[i][name] = e.target.value;\r\n        setValues({ students: students });\r\n    };\r\n\r\n    const addStudent = () => {\r\n        setValues({ students: [...values.students, { firstName: \"\", lastName: \"\" }] })\r\n    }\r\n\r\n    const deleteStudent = i => () => {\r\n        if (values.students.length > 1) {\r\n            let students = [...values.students];\r\n            students.splice(i, 1);\r\n            setValues({\r\n                students: students\r\n            })\r\n        } else {\r\n            props.snackbar.showMessage(\"error\", \"La salle doit contenir au minimum un étudiant\");\r\n        }\r\n    }\r\n\r\n    const createRoom = () => {\r\n        let validEntries = true;\r\n\r\n        for (let i = 0; i < values.students.length; i++) {\r\n            if (values.students[i].firstName === \"\" || values.students[i].lastName === \"\") {\r\n                validEntries = false;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (validEntries) {\r\n            const data = { ...values };\r\n\r\n            fetch(api.protocol + \"://\" + api.hostname + \":\" + api.port + \"/room\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) throw res;\r\n                    else return res.json();\r\n                })\r\n                .then(res => {\r\n                    props.snackbar.showMessage(\"success\", \"Salle créée avec succès\");\r\n                    setRedirection({ redirect: true, roomID: res._id });\r\n                })\r\n                .catch(console.error)\r\n        }\r\n        else {\r\n            props.snackbar.showMessage(\"error\", \"Tous les champs doivent être remplis\");\r\n        }\r\n    }\r\n\r\n    if (redirection.redirect)\r\n        return <Redirect to={\"/room/\" + redirection.roomID} />;\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <Grid container justify=\"center\">\r\n                <Grid item xs={12} md={10} lg={8}>\r\n                    <Paper className={classes.root}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h5\" component=\"h3\">\r\n                                    Création de la salle\r\n                        </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                {values.students.map((student, i) =>\r\n                                    <Grid container spacing={8} alignItems=\"center\" key={i}>\r\n                                        <Grid item xs={12} md={4}>\r\n                                            <TextField\r\n                                                id=\"outlined-name\"\r\n                                                label=\"Nom\"\r\n                                                className={classes.textField}\r\n                                                value={student.lastName}\r\n                                                onChange={handleChange('lastName', i)}\r\n                                                margin=\"normal\"\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={4}>\r\n                                            <TextField\r\n                                                id=\"outlined-name\"\r\n                                                label=\"Prénom\"\r\n                                                className={classes.textField}\r\n                                                value={student.firstName}\r\n                                                onChange={handleChange('firstName', i)}\r\n                                                margin=\"normal\"\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={4}>\r\n                                            <Danger variant=\"contained\" color=\"primary\" onClick={deleteStudent(i)}>\r\n                                                Supprimer l'étudiant\r\n                                            </Danger>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Success variant=\"contained\" color=\"primary\" className={classes.margin} onClick={createRoom}>\r\n                                    Créer la salle\r\n                                </Success>\r\n                                <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={addStudent}>\r\n                                    <PersonAdd className={classes.leftIcon} />\r\n                                    Ajouter un étudiant\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withSnackbar(CreateRoom);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { Success } from \"../Components/Buttons\"\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: \"15px\"\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nexport default function JoinRoom(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        roomID: \"\"\r\n    });\r\n\r\n    const handleChange = name => e => {\r\n        setValues({ [name]: e.target.value });\r\n    };\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <Grid container justify=\"center\">\r\n                <Grid item xs={12} md={10} lg={8}>\r\n                    <Paper className={classes.root}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h5\" component=\"h3\">\r\n                                    Rejoindre une salle\r\n                        </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6} lg={3}>\r\n                                <TextField\r\n                                    id=\"outlined-name\"\r\n                                    label=\"Identifiant de la salle\"\r\n                                    className={classes.textField}\r\n                                    value={values.roomID}\r\n                                    onChange={handleChange('roomID')}\r\n                                    onKeyPress={(e) => {\r\n                                        if (e.key === 'Enter') {\r\n                                            props.history.push(`/room/${e.target.value}`)\r\n                                        }\r\n                                    }}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    autoFocus\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Success component={Link} to={\"/room/\" + values.roomID} variant=\"contained\" color=\"primary\" className={classes.margin}>\r\n                                    Rejoindre la salle\r\n                            </Success>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </main>\r\n    );\r\n}","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport { withSnackbar } from './SnackbarProvider';\r\nimport { SuccessSimple, DangerSimple } from \"./Buttons\";\r\n\r\nimport { api } from \"../config\";\r\n\r\nfunction NewVarDialog(props) {\r\n    const [variable, setVariable] = React.useState({ name: \"\", unit: \"\" })\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n\r\n    const handleChange = name => e => {\r\n        setVariable({ ...variable, [name]: e.target.value })\r\n    }\r\n\r\n    function createNewVar() {\r\n        if (variable.name !== \"\" && variable.unit !== \"\") {\r\n            const data = { ...variable };\r\n\r\n            fetch(api.protocol + \"://\" + api.hostname + \":\" + api.port + \"/room/\" + props.roomID + \"/variable\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data)\r\n            })\r\n                .then(res => {\r\n                    if (!res.ok) throw res;\r\n                    else return res.json();\r\n                })\r\n                .then(res => {\r\n                    props.snackbar.showMessage(\"success\", \"Variable créée avec succès\");\r\n                    setVariable({ name: \"\", unit: \"\" });\r\n                    props.setRoom(res)\r\n                    handleClose();\r\n                })\r\n                .catch(err => {\r\n                    err.json().then(msg => {\r\n                        if (msg.message === \"VariableAlreadyExists\")\r\n                            props.snackbar.showMessage(\"error\", \"Une variable existe déjà avec ce nom\");\r\n                    });\r\n                });\r\n        } else {\r\n            props.snackbar.showMessage(\"error\", \"Tous les champs doivent être remplis\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Créer une nouvelle variable</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Cette nouvelle variable vous permettra d'envoyer d'autres types de données depuis votre Arduino MKR.\r\n                    <br />Il est recommandé de ne pas mettre d'accent ou de caractères spéciaux dans le nom de la variable.\r\n                </DialogContentText>\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Nom de la variable\"\r\n                    type=\"text\"\r\n                    value={variable.name}\r\n                    onChange={handleChange(\"name\")}\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                />\r\n                <TextField\r\n                    margin=\"dense\"\r\n                    id=\"unit\"\r\n                    label=\"Unité\"\r\n                    type=\"text\"\r\n                    value={variable.unit}\r\n                    onChange={handleChange(\"unit\")}\r\n                    fullWidth\r\n                />\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <DangerSimple onClick={handleClose} color=\"primary\">\r\n                    Annuler\r\n                </DangerSimple>\r\n                <SuccessSimple onClick={createNewVar} color=\"primary\">\r\n                    Créer\r\n                </SuccessSimple>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default withSnackbar(NewVarDialog);","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nimport { SuccessSimple, DangerSimple } from \"./Buttons\";\r\nimport { withSnackbar } from \"./SnackbarProvider\";\r\n\r\nimport { api } from \"../config\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        minWidth: 120,\r\n        width: \"100%\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction NewGraphDialog(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({ variable: \"\" });\r\n\r\n    function handleClose() {\r\n        props.setOpen(false);\r\n    }\r\n    function handleChange(event) {\r\n        setValues(oldValues => ({\r\n            ...oldValues,\r\n            [event.target.name]: event.target.value,\r\n        }));\r\n    }\r\n\r\n    function addGraph() {\r\n        const data = {\r\n            variable: values.variable\r\n        }\r\n\r\n        fetch(api.protocol + \"://\" + api.hostname + \":\" + api.port + \"/room/\" + props.roomID + \"/graph\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) throw res;\r\n                else return res.json();\r\n            })\r\n            .then(res => {\r\n                props.snackbar.showMessage(\"success\", \"Graph créée avec succès\");\r\n                setValues({ variable: \"\" });\r\n                props.setRoom(res);\r\n                handleClose();\r\n            })\r\n            .catch(err => {\r\n                console.error(err);\r\n                err.json().then(msg => {\r\n                    console.error(err);\r\n                });\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Dialog open={props.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle id=\"form-dialog-title\">Créer un nouveau graphique</DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    Associer une variable à un nouveau graphique\r\n                </DialogContentText>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel htmlFor=\"variable\">Nom de la variable</InputLabel>\r\n                    <Select\r\n                        value={values.variable}\r\n                        onChange={handleChange}\r\n                        inputProps={{\r\n                            name: 'variable',\r\n                            id: 'variable'\r\n                        }}\r\n                    >\r\n                        {props.variables.map(variable =>\r\n                            <MenuItem\r\n                                key={variable.name}\r\n                                value={variable.name}\r\n                            >\r\n                                {variable.name + \" (\" + variable.unit + \")\"}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <DangerSimple onClick={handleClose} color=\"primary\">\r\n                    Annuler\r\n                </DangerSimple>\r\n                <SuccessSimple onClick={addGraph} color=\"primary\">\r\n                    Créer\r\n                </SuccessSimple>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default withSnackbar(NewGraphDialog)","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SpeedDial from '@material-ui/lab/SpeedDial';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDialAction from '@material-ui/lab/SpeedDialAction';\r\nimport Add from '@material-ui/icons/Add';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    controls: {\r\n        margin: theme.spacing(3),\r\n    },\r\n    exampleWrapper: {\r\n        position: 'relative',\r\n        height: 380,\r\n    },\r\n    radioGroup: {\r\n        margin: theme.spacing(1, 0),\r\n    },\r\n    speedDial: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(3),\r\n    }\r\n});\r\n\r\nclass SpeedDials extends React.Component {\r\n    state = {\r\n        direction: 'up',\r\n        open: false\r\n    };\r\n\r\n    actions = [\r\n        { icon: <Add />, name: 'Ajouter une variable', action: this.props.newVar },\r\n        { icon: <Add />, name: 'Ajouter un graphique', action: this.props.newGraph },\r\n    ];\r\n\r\n    handleClick = () => {\r\n        this.setState(state => ({\r\n            open: !state.open,\r\n        }));\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { hidden, open } = this.state;\r\n\r\n        return (\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial example\"\r\n                className={classes.speedDial}\r\n                hidden={hidden}\r\n                icon={<SpeedDialIcon />}\r\n                onBlur={this.handleClose}\r\n                onClick={this.handleClick}\r\n                onClose={this.handleClose}\r\n                onFocus={this.handleOpen}\r\n                onMouseEnter={this.handleOpen}\r\n                onMouseLeave={this.handleClose}\r\n                open={open}\r\n                direction=\"up\"\r\n            >\r\n                {this.actions.map(action => (\r\n                    <SpeedDialAction\r\n                        key={action.name}\r\n                        icon={action.icon}\r\n                        tooltipTitle={action.name}\r\n                        tooltipPlacement=\"left\"\r\n                        tooltipOpen\r\n                        onClick={action.action}\r\n                    />\r\n                ))}\r\n            </SpeedDial>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SpeedDials);","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nexport default function Chart(props) {\r\n    const [data, setData] = useState({\r\n        datasets: [\r\n            {\r\n                fill: true,\r\n                lineTension: 0.4,\r\n                borderColor: 'rgba(75,192,192,1)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderColor: 'rgba(75,192,192,1)',\r\n                pointBackgroundColor: '#fff',\r\n                pointBorderWidth: 4,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: props.data.map(data => ({ y: data.value, x: new Date(data.date) }))\r\n            }\r\n        ]\r\n    });\r\n    let reference;\r\n\r\n    useEffect(() => {\r\n        setData({\r\n            datasets: [\r\n                {\r\n                    fill: true,\r\n                    lineTension: 0.4,\r\n                    borderColor: 'rgba(75,192,192,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(75,192,192,1)',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 4,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 1,\r\n                    pointHitRadius: 10,\r\n                    data: props.data.map(data => ({ y: data.value, x: new Date(data.date) }))\r\n                }\r\n            ]\r\n        });\r\n        \r\n        console.log(data.datasets[0].data);\r\n    }, [props.data]\r\n    );\r\n\r\n    useEffect(() => {\r\n        console.log(props.newData)\r\n        if (props.newData && props.newData.variable === props.variable.name && props.newData.value) {\r\n            setData({\r\n                datasets: [\r\n                    {\r\n                        ...data.datasets[0],\r\n                        data: [...data.datasets[0].data, {y:props.newData.value, x: props.newData.date}]\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n    }, [props.newData]\r\n    );\r\n\r\n    const options = {\r\n        title: {\r\n            text: 'Chart.js Time Scale'\r\n        },\r\n        scales: {\r\n            xAxes: [{\r\n                type: 'time',\r\n                time: {\r\n                    // round: 'day'\r\n                    tooltipFormat: 'HH:mm'\r\n                },\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Date'\r\n                },\r\n                distribution: 'linear'\r\n            }],\r\n            yAxes: [{\r\n                ticks: {\r\n                    callback: (value, index, values) => value + \"°C\"\r\n                },\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'value'\r\n                }\r\n            }]\r\n        },\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            callbacks: {\r\n                label: (tooltipItem) => tooltipItem.yLabel,\r\n                title: () => null\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Line data={data} options={options} ref={ref => reference = ref} />\r\n    )\r\n}","import React, { useEffect } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Line } from 'react-chartjs-2';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport NewVarDialog from \"../Components/NewVarDialog\";\r\nimport NewGraphDialog from \"../Components/NewGraphDialog\";\r\nimport SpeedDial from \"../Components/SpeedDial\";\r\nimport Chart from \"../Components/Chart\";\r\nimport { withSnackbar } from \"../Components/SnackbarProvider\";\r\n\r\nimport { api } from \"../config\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(10),\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(2),\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n}));\r\n/*\r\nconst data = {\r\n    labels: Object.keys(rawData).map(key => new Date(key).toLocaleString()),\r\n    datasets: [\r\n        {\r\n            label: 'My First dataset',\r\n            fill: true,\r\n            lineTension: 0.5,\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 1,\r\n            pointHoverRadius: 5,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 1,\r\n            pointHitRadius: 10,\r\n            data: Object.keys(rawData).map(key => Math.round(rawData[key].temperature.sol) / 10)\r\n        }\r\n    ]\r\n};*/\r\n\r\nfunction Room(props) {\r\n    const classes = useStyles();\r\n    const [newVar, setNewVar] = React.useState(false);\r\n    const [newGraph, setNewGraph] = React.useState(false);\r\n    const [redirect, setRedirect] = React.useState(false);\r\n    const [room, setRoom] = React.useState({\r\n        students: [{ lastName: \"\", firstName: \"\" }],\r\n        variables: [{ name: \"\", unit: \"\" }],\r\n        datas: [{ value: \"\", variable: \"\", date: Date.now() }],\r\n        graphs: []\r\n    });\r\n    const [newData, setNewData] = React.useState({ date: Date.now(), value: 0, variable: \"\" })\r\n    const params = props.match.params;\r\n\r\n    //const socket = socketIOClient(api.protocol + \"://\" + api.hostname + \":3002\");\r\n\r\n    useEffect(() => {\r\n        fetch(api.protocol + \"://\" + api.hostname + \":\" + api.port + \"/room/\" + params.id, {\r\n            method: \"GET\"\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) throw res;\r\n                else return res.json();\r\n            })\r\n            .then(res => {\r\n                setRoom({ ...res });\r\n            })\r\n            .catch(err => {\r\n                err.json()\r\n                    .then(msg => {\r\n                        if (msg.message === \"RoomNotFound\") {\r\n                            props.snackbar.showMessage(\"error\", \"Aucune salle n'existe avec cet identifiant\")\r\n                            setRedirect(true);\r\n                        }\r\n                    });\r\n            })\r\n    }, [params.id, props.snackbar]);\r\n\r\n    useEffect(() => {\r\n        const socket = socketIOClient(api.protocol + \"://\" + api.hostname + \":3002\");\r\n\r\n        socket.emit(\"room\", params.id);\r\n        socket.on(\"data\", data => setNewData(data));\r\n\r\n        return () => socket.disconnect()\r\n    }, [])\r\n\r\n    /*useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setNewData({\r\n                variable: \"temp\",\r\n                value: newData.value + 1,\r\n                date: Date.now()\r\n            });\r\n        }, 5000);\r\n\r\n        return () => clearInterval(interval);\r\n    })*/\r\n\r\n    if (redirect)\r\n        return <Redirect to=\"/join\" />\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <NewVarDialog\r\n                open={newVar}\r\n                setOpen={setNewVar}\r\n                setRoom={setRoom}\r\n                roomID={params.id}\r\n            />\r\n            <NewGraphDialog\r\n                open={newGraph}\r\n                setOpen={setNewGraph}\r\n                setRoom={setRoom}\r\n                roomID={params.id}\r\n                variables={room.variables}\r\n            />\r\n            <SpeedDial newVar={() => setNewVar(true)} newGraph={() => setNewGraph(true)} />\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.toolbar} />\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText primary={\"Identifiant de la salle :\"} />\r\n                        <ListItemText primary={params.id} />\r\n                    </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText primary={\"Etudiants :\"} />\r\n                    </ListItem>\r\n                    {\r\n                        room.students.map(student =>\r\n                            <ListItem key={student._id || Date.now()}>\r\n                                <ListItemText primary={student.lastName.toUpperCase() + \" \" + student.firstName} />\r\n                            </ListItem>\r\n                        )\r\n                    }\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText primary={\"Dernier message reçu\"} />\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary={room.datas.length > 0 ? \"le \" + (new Date(room.datas[room.datas.length - 1].date)).toLocaleString() : \"n/a\"} />\r\n                    </ListItem>\r\n                </List>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item xs={12} md={10} lg={6}>\r\n                        {room.graphs.map(graph =>\r\n                            <Chart\r\n                                key={graph._id}\r\n                                data={room.datas.filter(data => data.variable === graph.variable)}\r\n                                newData={newData}\r\n                                variable={{ name: graph.variable }}\r\n                            />\r\n                        )}\r\n                    </Grid>\r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withSnackbar(Room);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Navbar from \"./Components/Navbar\";\r\n//import Home from \"./Pages/Home\";\r\nimport CreateRoom from \"./Pages/CreateRoom\";\r\nimport JoinRoom from \"./Pages/JoinRoom\";\r\nimport Room from \"./Pages/Room\";\r\nimport SnackbarProvider from \"./Components/SnackbarProvider\";\r\n\r\n\r\nReactDOM.render((\r\n    <SnackbarProvider>\r\n        <Router>\r\n            <Navbar />\r\n            <Route path=\"/create\" exact component={CreateRoom} />\r\n            <Route path=\"/join\" exact component={JoinRoom} />\r\n            <Route path=\"/room/:id\" exact component={Room} />\r\n        </Router>\r\n    </SnackbarProvider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}