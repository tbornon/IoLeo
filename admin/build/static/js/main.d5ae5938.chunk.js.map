{"version":3,"sources":["serviceWorker.js","Components/Navbar.jsx","Components/Buttons.jsx","Pages/Home.jsx","Components/SnackbarProvider.jsx","Pages/EditRoom.jsx","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","appBar","zIndex","drawer","CreateButton","color","background","props","react_default","a","createElement","Button","Object","assign","style","objectSpread","backgroundColor","Danger","Success","Warning","width","marginTop","overflowX","table","minWidth","useStyles1","success","green","error","palette","dark","info","primary","main","warning","amber","message","display","alignItems","MySnackbarContentWrapper","classes","className","onClose","variant","other","objectWithoutProperties","SnackbarContent","clsx","aria-describedby","id","action","IconButton","key","aria-label","onClick","Close_default","icon","SnackbarContext","createContext","showMessage","open","SnackbarProvider","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","duration","indexOf","setState","handleClose","bind","assertThisInitialized","event","reason","Provider","value","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","children","React","Component","contextType","padding","container","flexWrap","textField","marginLeft","dense","menu","leftIcon","margin","content","withSnackbar","_useState","useState","students","firstName","lastName","_id","params","special","_useState2","slicedToArray","values","setValues","_useState3","redirect","roomID","_useState4","redirection","setRedirection","useEffect","fetch","api","protocol","port","method","headers","Accept","Content-Type","then","res","ok","json","catch","console","handleChange","name","i","e","toConsumableArray","target","handleChangeTxt","type","defineProperty","checked","deleteStudent","length","splice","snackbar","react_router","to","Grid","justify","item","xs","md","lg","Paper","Typography","component","TextField","label","onChange","map","student","fullWidth","concat","PersonAdd_default","FormControlLabel","control","Checkbox","data","newId","undefined","body","JSON","stringify","Link","Consumer","ReactDOM","render","Components_SnackbarProvider","react_router_dom","CssBaseline","AppBar","position","Toolbar","button","path","exact","rooms","log","Table","TableHead","TableRow","TableCell","align","TableBody","room","s","toUpperCase","join","href","EditRoom","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5ae5938.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        appBar: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n        },\r\n    })\r\n);\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        Internet of Léo - Admin\r\n                    </Typography>\r\n\r\n                    <Button component={Link} to=\"/\" color=\"inherit\" className={classes.button}>\r\n                        Accueil\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst CreateButton = (color, background) => {\r\n    if (background)\r\n        return props => <Button {...props} style={{...props.style, backgroundColor: color }}></Button>\r\n    else\r\n        return props => <Button {...props} style={{...props.style, color: color }}></Button>\r\n}\r\n\r\nexport const Danger = CreateButton(\"#f44336\", true)\r\nexport const Success = CreateButton(\"#4caf50\", true)\r\nexport const Warning = CreateButton(\"#ff9800\", true)\r\n\r\nexport const DangerSimple = CreateButton(\"#f44336\", false)\r\nexport const SuccessSimple = CreateButton(\"#4caf50\", false)\r\nexport const WarningSimple = CreateButton(\"#ff9800\", false)","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport { Warning, Danger } from \"../Components/Buttons\"\r\n\r\nimport { api } from \"../config\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(10),\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n}));\r\n\r\nexport default function SimpleTable() {\r\n    const [state, setState] = useState({ rooms: [] });\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        fetch(api.protocol + \"://\" + api.hostname + \":\" + api.port + \"/room\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) throw res;\r\n                else return res.json();\r\n            })\r\n            .then(res => {\r\n                console.log(res);\r\n                setState({ rooms: res });\r\n            })\r\n            .catch(console.error)\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={10} lg={8}>\r\n                <Paper className={classes.root}>\r\n                    <Table className={classes.table}>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell align=\"right\">Identifiant</TableCell>\r\n                                <TableCell align=\"right\">&Eacute;tudiant(s)</TableCell>\r\n                                <TableCell align=\"right\">Actions</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {state.rooms.map(room => (\r\n                                <TableRow key={room._id}>\r\n                                    <TableCell align=\"right\">{room._id}</TableCell>\r\n                                    <TableCell align=\"right\">{room.students.map(s => s.lastName.toUpperCase() + \" \" + s.firstName).join(\",\")}</TableCell>\r\n                                    <TableCell align=\"right\">\r\n                                        <Button\r\n                                            component=\"a\"\r\n                                            target=\"_blank\"\r\n                                            href={\"http://localhost:3000/room/\" + room._id}\r\n                                            variant=\"contained\" color=\"primary\"\r\n                                            className=\"primary\"\r\n                                        >\r\n                                            Rejoindre la salle\r\n                                          </Button>\r\n                                        <Warning\r\n                                            component={Link}\r\n                                            to={\"/edit/\" + room._id}\r\n                                            variant=\"contained\"\r\n                                            style={{ marginLeft: \"10px\" }}\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            Modifier\r\n                                        </Warning>\r\n                                        <Danger variant=\"contained\" style={{ marginLeft: \"10px\" }} color=\"primary\" >Supprimer</Danger>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n                    </Table>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}","import React, { createContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { amber, green } from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const { className, message, onClose, variant, ...other } = props;\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n                    {message}\r\n                </span>\r\n            }\r\n            action={[\r\n                <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\r\n                    <CloseIcon className={classes.icon} />\r\n                </IconButton>,\r\n            ]}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\r\n};\r\n\r\nexport const SnackbarContext = createContext({\r\n    showMessage: {},\r\n    open: false\r\n});\r\n\r\nclass SnackbarProvider extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            open: false,\r\n            showMessage: (variant, message, duration) => {\r\n                if ([\"success\", \"warning\", \"error\", \"info\"].indexOf(variant) !== -1 && message) {\r\n                    this.setState({\r\n                        variant,\r\n                        message,\r\n                        duration: duration || this.state.duration,\r\n                        open: true\r\n                    });\r\n                }\r\n            },\r\n            duration: 3000,\r\n            message: \"\",\r\n            variant: \"success\"\r\n        }\r\n\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    handleClose(event, reason) {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        this.setState({ open: false });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <SnackbarContext.Provider value={this.state}>\r\n                    <Snackbar\r\n                        anchorOrigin={{\r\n                            vertical: 'bottom',\r\n                            horizontal: 'left',\r\n                        }}\r\n                        open={this.state.open}\r\n                        autoHideDuration={this.state.duration}\r\n                        onClose={this.handleClose}\r\n                    >\r\n                        <MySnackbarContentWrapper\r\n                            onClose={this.handleClose}\r\n                            variant={this.state.variant}\r\n                            message={this.state.message}\r\n                        />\r\n                    </Snackbar>\r\n                    {this.props.children}\r\n                </SnackbarContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSnackbarProvider.contextType = SnackbarContext;\r\n\r\nexport function withSnackbar(Component) {\r\n    return function WrapperComponent(props) {\r\n        return (\r\n            <SnackbarContext.Consumer>\r\n                {snackbar => <Component {...props} snackbar={snackbar} />}\r\n            </SnackbarContext.Consumer>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SnackbarProvider;","import React, { useState, useEffect } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nimport PersonAdd from '@material-ui/icons/PersonAdd';\r\n\r\nimport { Danger, Success, Warning } from \"../Components/Buttons\"\r\nimport { withSnackbar } from \"../Components/SnackbarProvider\"\r\n\r\nimport { api } from \"../config\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        padding: theme.spacing(3, 2),\r\n        marginTop: \"15px\"\r\n    },\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    dense: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n    leftIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(10),\r\n    },\r\n}));\r\n\r\nfunction EditRoom(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = useState({\r\n        students: [{ firstName: \"\", lastName: \"\" }],\r\n        _id: props.match.params.id,\r\n        special: false,\r\n    });\r\n\r\n    const [redirection, setRedirection] = useState({ redirect: false, roomID: 0 })\r\n\r\n    useEffect(() => {\r\n        fetch(api.protocol + \"://\" + api.hostname + \":\" + api.port + \"/room/\" + props.match.params.id, {\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) throw res;\r\n                else return res.json();\r\n            })\r\n            .then(res => {\r\n                setValues(res);\r\n                setRedirection({redirect: false});\r\n            })\r\n            .catch(console.error)\r\n    }, [props.match.params.id]);\r\n\r\n    const handleChange = (name, i) => e => {\r\n        let students = [...values.students];\r\n        students[i][name] = e.target.value;\r\n        setValues({ ...values, students });\r\n    };\r\n\r\n    const handleChangeTxt = name => e => {\r\n        if (e.target.type === \"text\")\r\n            setValues({ ...values, [name]: e.target.value });\r\n        else\r\n            setValues({ ...values, [name]: e.target.checked });\r\n    }\r\n\r\n    const addStudent = () => {\r\n        setValues({ ...values, students: values.students.concat({ firstName: \"\", lastName: \"\" }) })\r\n    }\r\n\r\n    const deleteStudent = i => () => {\r\n        if (values.students.length > 1) {\r\n            let students = [...values.students];\r\n            students.splice(i, 1);\r\n            setValues({\r\n                ...values,\r\n                students: students\r\n            })\r\n        } else {\r\n            props.snackbar.showMessage(\"error\", \"La salle doit contenir au minimum un étudiant\");\r\n        }\r\n    }\r\n\r\n    const updateRoom = () => {\r\n        const data = {\r\n            _id: props.match.params.id,\r\n            newId: values._id !== props.match.params.id ? values._id : undefined,\r\n            students: values.students,\r\n            special: values.special\r\n        }\r\n\r\n        fetch(api.protocol + \"://\" + api.hostname + \":\" + api.port + \"/room/\", {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n            .then(res => {\r\n                if (!res.ok) throw res;\r\n                else return res.json();\r\n            })\r\n            .then(res => {\r\n                props.snackbar.showMessage(\"success\", \"Salle mise à jour avec succès\");\r\n                if (data.newId)\r\n                    setRedirection({ redirect: true, roomID: data.newId })\r\n                else\r\n                    setValues(res);\r\n            })\r\n            .catch(console.error)\r\n    }\r\n\r\n    if (redirection.redirect)\r\n        return <Redirect to={\"/edit/\" + redirection.roomID} />\r\n\r\n    return (\r\n        <main className={classes.content}>\r\n            <Grid container justify=\"center\">\r\n                <Grid item xs={12} md={10} lg={8}>\r\n                    <Paper className={classes.root}>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h5\" component=\"h3\">\r\n                                    Modification de la salle {props.match.params._id}\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <TextField\r\n                                    id=\"outlined-name\"\r\n                                    label=\"Identifiant\"\r\n                                    className={classes.textField}\r\n                                    value={values._id}\r\n                                    onChange={handleChangeTxt('_id')}\r\n                                    margin=\"normal\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                {values.students.map((student, i) =>\r\n                                    <Grid container spacing={8} alignItems=\"center\" key={i}>\r\n                                        <Grid item xs={12} md={4}>\r\n                                            <TextField\r\n                                                id=\"outlined-name\"\r\n                                                label=\"Nom\"\r\n                                                className={classes.textField}\r\n                                                value={student.lastName}\r\n                                                onChange={handleChange('lastName', i)}\r\n                                                margin=\"normal\"\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={4}>\r\n                                            <TextField\r\n                                                id=\"outlined-name\"\r\n                                                label=\"Prénom\"\r\n                                                className={classes.textField}\r\n                                                value={student.firstName}\r\n                                                onChange={handleChange('firstName', i)}\r\n                                                margin=\"normal\"\r\n                                                variant=\"outlined\"\r\n                                                fullWidth\r\n                                            />\r\n                                        </Grid>\r\n\r\n                                        <Grid item xs={12} md={4}>\r\n                                            <Danger variant=\"contained\" color=\"primary\" onClick={deleteStudent(i)}>\r\n                                                Supprimer l'étudiant\r\n                                            </Danger>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                )}\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Button variant=\"contained\" color=\"primary\" className={classes.margin} onClick={addStudent}>\r\n                                    <PersonAdd className={classes.leftIcon} />\r\n                                    Ajouter un étudiant\r\n                                </Button>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Checkbox color=\"primary\" checked={values.special} className={classes.margin} onChange={handleChangeTxt('special')} />\r\n                                    }\r\n                                    label=\"Salle spéciale\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Success variant=\"contained\" color=\"primary\" className={classes.margin} onClick={updateRoom}>\r\n                                    Mettre à jour la salle\r\n                                </Success>\r\n                                <Warning\r\n                                    component={Link}\r\n                                    to=\"/\"\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.margin}\r\n                                >\r\n                                    Annuler\r\n                                </Warning>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default withSnackbar(EditRoom);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Home from \"./Pages/Home\";\r\nimport EditRoom from \"./Pages/EditRoom\";\r\nimport SnackbarProvider from \"./Components/SnackbarProvider\";\r\n\r\n\r\nReactDOM.render((\r\n    <SnackbarProvider>\r\n        <Router>\r\n            <Navbar />\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/edit/:id\" component={EditRoom} />\r\n        </Router>\r\n    </SnackbarProvider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}